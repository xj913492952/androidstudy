// Generated by view binder compiler. Do not edit!
package com.style.lib.common.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.style.lib.common.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import tech.gaolinfeng.imagecrop.lib.CropImageView;

public final class ActivityImageCropBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CropImageView cropImage;

  @NonNull
  public final RelativeLayout cropImageCroppingLayer;

  @NonNull
  public final ProgressBar cropImageProgressBar;

  private ActivityImageCropBinding(@NonNull LinearLayout rootView, @NonNull CropImageView cropImage,
      @NonNull RelativeLayout cropImageCroppingLayer, @NonNull ProgressBar cropImageProgressBar) {
    this.rootView = rootView;
    this.cropImage = cropImage;
    this.cropImageCroppingLayer = cropImageCroppingLayer;
    this.cropImageProgressBar = cropImageProgressBar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityImageCropBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityImageCropBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_image_crop, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityImageCropBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.crop_image;
      CropImageView cropImage = ViewBindings.findChildViewById(rootView, id);
      if (cropImage == null) {
        break missingId;
      }

      id = R.id.crop_image_cropping_layer;
      RelativeLayout cropImageCroppingLayer = ViewBindings.findChildViewById(rootView, id);
      if (cropImageCroppingLayer == null) {
        break missingId;
      }

      id = R.id.crop_image_progress_bar;
      ProgressBar cropImageProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (cropImageProgressBar == null) {
        break missingId;
      }

      return new ActivityImageCropBinding((LinearLayout) rootView, cropImage,
          cropImageCroppingLayer, cropImageProgressBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
