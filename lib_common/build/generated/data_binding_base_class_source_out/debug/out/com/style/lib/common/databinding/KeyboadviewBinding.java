// Generated by view binder compiler. Do not edit!
package com.style.lib.common.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.style.lib.common.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class KeyboadviewBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button button00;

  @NonNull
  public final Button button01;

  @NonNull
  public final Button button02;

  @NonNull
  public final Button button03;

  @NonNull
  public final Button button04;

  @NonNull
  public final Button button05;

  @NonNull
  public final Button button06;

  @NonNull
  public final Button button07;

  @NonNull
  public final Button button08;

  @NonNull
  public final Button button09;

  @NonNull
  public final Button buttonCross;

  @NonNull
  public final Button buttonDot;

  @NonNull
  public final LinearLayout dropdownLl;

  private KeyboadviewBinding(@NonNull LinearLayout rootView, @NonNull Button button00,
      @NonNull Button button01, @NonNull Button button02, @NonNull Button button03,
      @NonNull Button button04, @NonNull Button button05, @NonNull Button button06,
      @NonNull Button button07, @NonNull Button button08, @NonNull Button button09,
      @NonNull Button buttonCross, @NonNull Button buttonDot, @NonNull LinearLayout dropdownLl) {
    this.rootView = rootView;
    this.button00 = button00;
    this.button01 = button01;
    this.button02 = button02;
    this.button03 = button03;
    this.button04 = button04;
    this.button05 = button05;
    this.button06 = button06;
    this.button07 = button07;
    this.button08 = button08;
    this.button09 = button09;
    this.buttonCross = buttonCross;
    this.buttonDot = buttonDot;
    this.dropdownLl = dropdownLl;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static KeyboadviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static KeyboadviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.keyboadview, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static KeyboadviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button00;
      Button button00 = ViewBindings.findChildViewById(rootView, id);
      if (button00 == null) {
        break missingId;
      }

      id = R.id.button01;
      Button button01 = ViewBindings.findChildViewById(rootView, id);
      if (button01 == null) {
        break missingId;
      }

      id = R.id.button02;
      Button button02 = ViewBindings.findChildViewById(rootView, id);
      if (button02 == null) {
        break missingId;
      }

      id = R.id.button03;
      Button button03 = ViewBindings.findChildViewById(rootView, id);
      if (button03 == null) {
        break missingId;
      }

      id = R.id.button04;
      Button button04 = ViewBindings.findChildViewById(rootView, id);
      if (button04 == null) {
        break missingId;
      }

      id = R.id.button05;
      Button button05 = ViewBindings.findChildViewById(rootView, id);
      if (button05 == null) {
        break missingId;
      }

      id = R.id.button06;
      Button button06 = ViewBindings.findChildViewById(rootView, id);
      if (button06 == null) {
        break missingId;
      }

      id = R.id.button07;
      Button button07 = ViewBindings.findChildViewById(rootView, id);
      if (button07 == null) {
        break missingId;
      }

      id = R.id.button08;
      Button button08 = ViewBindings.findChildViewById(rootView, id);
      if (button08 == null) {
        break missingId;
      }

      id = R.id.button09;
      Button button09 = ViewBindings.findChildViewById(rootView, id);
      if (button09 == null) {
        break missingId;
      }

      id = R.id.buttonCross;
      Button buttonCross = ViewBindings.findChildViewById(rootView, id);
      if (buttonCross == null) {
        break missingId;
      }

      id = R.id.buttonDot;
      Button buttonDot = ViewBindings.findChildViewById(rootView, id);
      if (buttonDot == null) {
        break missingId;
      }

      id = R.id.dropdownLl;
      LinearLayout dropdownLl = ViewBindings.findChildViewById(rootView, id);
      if (dropdownLl == null) {
        break missingId;
      }

      return new KeyboadviewBinding((LinearLayout) rootView, button00, button01, button02, button03,
          button04, button05, button06, button07, button08, button09, buttonCross, buttonDot,
          dropdownLl);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
