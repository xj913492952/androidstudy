// Generated by view binder compiler. Do not edit!
package com.style.framework.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.style.framework.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityWheelBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout llBirthday;

  @NonNull
  public final LinearLayout llFcAge;

  @NonNull
  public final LinearLayout llHometown;

  @NonNull
  public final LinearLayout llOccupation;

  @NonNull
  public final TextView viewAge;

  @NonNull
  public final TextView viewBirthday;

  @NonNull
  public final TextView viewHometown;

  @NonNull
  public final TextView viewOccupation;

  private ActivityWheelBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout llBirthday,
      @NonNull LinearLayout llFcAge, @NonNull LinearLayout llHometown,
      @NonNull LinearLayout llOccupation, @NonNull TextView viewAge, @NonNull TextView viewBirthday,
      @NonNull TextView viewHometown, @NonNull TextView viewOccupation) {
    this.rootView = rootView;
    this.llBirthday = llBirthday;
    this.llFcAge = llFcAge;
    this.llHometown = llHometown;
    this.llOccupation = llOccupation;
    this.viewAge = viewAge;
    this.viewBirthday = viewBirthday;
    this.viewHometown = viewHometown;
    this.viewOccupation = viewOccupation;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityWheelBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityWheelBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_wheel, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityWheelBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ll_birthday;
      LinearLayout llBirthday = ViewBindings.findChildViewById(rootView, id);
      if (llBirthday == null) {
        break missingId;
      }

      id = R.id.ll_fc_age;
      LinearLayout llFcAge = ViewBindings.findChildViewById(rootView, id);
      if (llFcAge == null) {
        break missingId;
      }

      id = R.id.ll_hometown;
      LinearLayout llHometown = ViewBindings.findChildViewById(rootView, id);
      if (llHometown == null) {
        break missingId;
      }

      id = R.id.ll_occupation;
      LinearLayout llOccupation = ViewBindings.findChildViewById(rootView, id);
      if (llOccupation == null) {
        break missingId;
      }

      id = R.id.view_age;
      TextView viewAge = ViewBindings.findChildViewById(rootView, id);
      if (viewAge == null) {
        break missingId;
      }

      id = R.id.view_birthday;
      TextView viewBirthday = ViewBindings.findChildViewById(rootView, id);
      if (viewBirthday == null) {
        break missingId;
      }

      id = R.id.view_hometown;
      TextView viewHometown = ViewBindings.findChildViewById(rootView, id);
      if (viewHometown == null) {
        break missingId;
      }

      id = R.id.view_occupation;
      TextView viewOccupation = ViewBindings.findChildViewById(rootView, id);
      if (viewOccupation == null) {
        break missingId;
      }

      return new ActivityWheelBinding((LinearLayout) rootView, llBirthday, llFcAge, llHometown,
          llOccupation, viewAge, viewBirthday, viewHometown, viewOccupation);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
