// Generated by view binder compiler. Do not edit!
package com.style.framework.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.style.framework.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEncryptBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnAesDecrypt;

  @NonNull
  public final Button btnAesEncrypt;

  @NonNull
  public final Button btnBytes2HexString;

  @NonNull
  public final Button btnHexString2Bytes;

  @NonNull
  public final TextView tvHtml;

  @NonNull
  public final TextView tvResult;

  private ActivityEncryptBinding(@NonNull LinearLayout rootView, @NonNull Button btnAesDecrypt,
      @NonNull Button btnAesEncrypt, @NonNull Button btnBytes2HexString,
      @NonNull Button btnHexString2Bytes, @NonNull TextView tvHtml, @NonNull TextView tvResult) {
    this.rootView = rootView;
    this.btnAesDecrypt = btnAesDecrypt;
    this.btnAesEncrypt = btnAesEncrypt;
    this.btnBytes2HexString = btnBytes2HexString;
    this.btnHexString2Bytes = btnHexString2Bytes;
    this.tvHtml = tvHtml;
    this.tvResult = tvResult;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEncryptBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEncryptBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_encrypt, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEncryptBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_aes_decrypt;
      Button btnAesDecrypt = ViewBindings.findChildViewById(rootView, id);
      if (btnAesDecrypt == null) {
        break missingId;
      }

      id = R.id.btn_aes_encrypt;
      Button btnAesEncrypt = ViewBindings.findChildViewById(rootView, id);
      if (btnAesEncrypt == null) {
        break missingId;
      }

      id = R.id.btn_bytes2HexString;
      Button btnBytes2HexString = ViewBindings.findChildViewById(rootView, id);
      if (btnBytes2HexString == null) {
        break missingId;
      }

      id = R.id.btn_hexString2Bytes;
      Button btnHexString2Bytes = ViewBindings.findChildViewById(rootView, id);
      if (btnHexString2Bytes == null) {
        break missingId;
      }

      id = R.id.tv_html;
      TextView tvHtml = ViewBindings.findChildViewById(rootView, id);
      if (tvHtml == null) {
        break missingId;
      }

      id = R.id.tv_result;
      TextView tvResult = ViewBindings.findChildViewById(rootView, id);
      if (tvResult == null) {
        break missingId;
      }

      return new ActivityEncryptBinding((LinearLayout) rootView, btnAesDecrypt, btnAesEncrypt,
          btnBytes2HexString, btnHexString2Bytes, tvHtml, tvResult);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
