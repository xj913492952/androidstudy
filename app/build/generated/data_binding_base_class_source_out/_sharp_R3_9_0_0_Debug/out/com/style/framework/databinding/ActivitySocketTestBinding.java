// Generated by view binder compiler. Do not edit!
package com.style.framework.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.style.framework.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySocketTestBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btConnect;

  @NonNull
  public final Button btDisconnect;

  @NonNull
  public final Button btSend;

  @NonNull
  public final Button btSendUdp;

  @NonNull
  public final EditText etMsg;

  private ActivitySocketTestBinding(@NonNull LinearLayout rootView, @NonNull Button btConnect,
      @NonNull Button btDisconnect, @NonNull Button btSend, @NonNull Button btSendUdp,
      @NonNull EditText etMsg) {
    this.rootView = rootView;
    this.btConnect = btConnect;
    this.btDisconnect = btDisconnect;
    this.btSend = btSend;
    this.btSendUdp = btSendUdp;
    this.etMsg = etMsg;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySocketTestBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySocketTestBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_socket_test, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySocketTestBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bt_connect;
      Button btConnect = ViewBindings.findChildViewById(rootView, id);
      if (btConnect == null) {
        break missingId;
      }

      id = R.id.bt_disconnect;
      Button btDisconnect = ViewBindings.findChildViewById(rootView, id);
      if (btDisconnect == null) {
        break missingId;
      }

      id = R.id.bt_send;
      Button btSend = ViewBindings.findChildViewById(rootView, id);
      if (btSend == null) {
        break missingId;
      }

      id = R.id.bt_send_udp;
      Button btSendUdp = ViewBindings.findChildViewById(rootView, id);
      if (btSendUdp == null) {
        break missingId;
      }

      id = R.id.et_msg;
      EditText etMsg = ViewBindings.findChildViewById(rootView, id);
      if (etMsg == null) {
        break missingId;
      }

      return new ActivitySocketTestBinding((LinearLayout) rootView, btConnect, btDisconnect, btSend,
          btSendUdp, etMsg);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
