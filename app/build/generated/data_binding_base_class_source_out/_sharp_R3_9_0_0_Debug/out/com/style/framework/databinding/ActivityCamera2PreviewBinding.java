// Generated by view binder compiler. Do not edit!
package com.style.framework.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.camera2.view.AutoFitTextureView;
import com.camera2.view.TestView;
import com.style.framework.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCamera2PreviewBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final AutoFitTextureView afttvCamera;

  @NonNull
  public final TestView test;

  @NonNull
  public final Button viewSwitch;

  @NonNull
  public final ImageView viewTakePicture;

  private ActivityCamera2PreviewBinding(@NonNull RelativeLayout rootView,
      @NonNull AutoFitTextureView afttvCamera, @NonNull TestView test, @NonNull Button viewSwitch,
      @NonNull ImageView viewTakePicture) {
    this.rootView = rootView;
    this.afttvCamera = afttvCamera;
    this.test = test;
    this.viewSwitch = viewSwitch;
    this.viewTakePicture = viewTakePicture;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCamera2PreviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCamera2PreviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_camera2_preview, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCamera2PreviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.afttv_camera;
      AutoFitTextureView afttvCamera = ViewBindings.findChildViewById(rootView, id);
      if (afttvCamera == null) {
        break missingId;
      }

      id = R.id.test;
      TestView test = ViewBindings.findChildViewById(rootView, id);
      if (test == null) {
        break missingId;
      }

      id = R.id.view_switch;
      Button viewSwitch = ViewBindings.findChildViewById(rootView, id);
      if (viewSwitch == null) {
        break missingId;
      }

      id = R.id.view_take_picture;
      ImageView viewTakePicture = ViewBindings.findChildViewById(rootView, id);
      if (viewTakePicture == null) {
        break missingId;
      }

      return new ActivityCamera2PreviewBinding((RelativeLayout) rootView, afttvCamera, test,
          viewSwitch, viewTakePicture);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
