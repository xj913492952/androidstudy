// Generated by view binder compiler. Do not edit!
package com.style.framework.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.style.framework.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTestRoomBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final Button btnRoomClearTable;

  @NonNull
  public final Button btnRoomInsertList;

  @NonNull
  public final Button btnRoomInsertOne;

  @NonNull
  public final Button btnRoomQueryAll;

  @NonNull
  public final Button btnRoomQueryById;

  private ActivityTestRoomBinding(@NonNull NestedScrollView rootView,
      @NonNull Button btnRoomClearTable, @NonNull Button btnRoomInsertList,
      @NonNull Button btnRoomInsertOne, @NonNull Button btnRoomQueryAll,
      @NonNull Button btnRoomQueryById) {
    this.rootView = rootView;
    this.btnRoomClearTable = btnRoomClearTable;
    this.btnRoomInsertList = btnRoomInsertList;
    this.btnRoomInsertOne = btnRoomInsertOne;
    this.btnRoomQueryAll = btnRoomQueryAll;
    this.btnRoomQueryById = btnRoomQueryById;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTestRoomBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTestRoomBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_test_room, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTestRoomBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_room_clear_table;
      Button btnRoomClearTable = ViewBindings.findChildViewById(rootView, id);
      if (btnRoomClearTable == null) {
        break missingId;
      }

      id = R.id.btn_room_insert_list;
      Button btnRoomInsertList = ViewBindings.findChildViewById(rootView, id);
      if (btnRoomInsertList == null) {
        break missingId;
      }

      id = R.id.btn_room_insert_one;
      Button btnRoomInsertOne = ViewBindings.findChildViewById(rootView, id);
      if (btnRoomInsertOne == null) {
        break missingId;
      }

      id = R.id.btn_room_query_all;
      Button btnRoomQueryAll = ViewBindings.findChildViewById(rootView, id);
      if (btnRoomQueryAll == null) {
        break missingId;
      }

      id = R.id.btn_room_query_by_id;
      Button btnRoomQueryById = ViewBindings.findChildViewById(rootView, id);
      if (btnRoomQueryById == null) {
        break missingId;
      }

      return new ActivityTestRoomBinding((NestedScrollView) rootView, btnRoomClearTable,
          btnRoomInsertList, btnRoomInsertOne, btnRoomQueryAll, btnRoomQueryById);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
