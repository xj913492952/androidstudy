// Generated by view binder compiler. Do not edit!
package com.style.framework.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.GridLayout;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.style.framework.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CallKeyboardBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button asterisk;

  @NonNull
  public final Button eight;

  @NonNull
  public final Button five;

  @NonNull
  public final Button four;

  @NonNull
  public final GridLayout gridlayout;

  @NonNull
  public final Button mark;

  @NonNull
  public final Button nine;

  @NonNull
  public final Button one;

  @NonNull
  public final Button seven;

  @NonNull
  public final Button six;

  @NonNull
  public final Button three;

  @NonNull
  public final Button two;

  @NonNull
  public final Button zero;

  private CallKeyboardBinding(@NonNull LinearLayout rootView, @NonNull Button asterisk,
      @NonNull Button eight, @NonNull Button five, @NonNull Button four,
      @NonNull GridLayout gridlayout, @NonNull Button mark, @NonNull Button nine,
      @NonNull Button one, @NonNull Button seven, @NonNull Button six, @NonNull Button three,
      @NonNull Button two, @NonNull Button zero) {
    this.rootView = rootView;
    this.asterisk = asterisk;
    this.eight = eight;
    this.five = five;
    this.four = four;
    this.gridlayout = gridlayout;
    this.mark = mark;
    this.nine = nine;
    this.one = one;
    this.seven = seven;
    this.six = six;
    this.three = three;
    this.two = two;
    this.zero = zero;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CallKeyboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CallKeyboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.call_keyboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CallKeyboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.asterisk;
      Button asterisk = ViewBindings.findChildViewById(rootView, id);
      if (asterisk == null) {
        break missingId;
      }

      id = R.id.eight;
      Button eight = ViewBindings.findChildViewById(rootView, id);
      if (eight == null) {
        break missingId;
      }

      id = R.id.five;
      Button five = ViewBindings.findChildViewById(rootView, id);
      if (five == null) {
        break missingId;
      }

      id = R.id.four;
      Button four = ViewBindings.findChildViewById(rootView, id);
      if (four == null) {
        break missingId;
      }

      id = R.id.gridlayout;
      GridLayout gridlayout = ViewBindings.findChildViewById(rootView, id);
      if (gridlayout == null) {
        break missingId;
      }

      id = R.id.mark;
      Button mark = ViewBindings.findChildViewById(rootView, id);
      if (mark == null) {
        break missingId;
      }

      id = R.id.nine;
      Button nine = ViewBindings.findChildViewById(rootView, id);
      if (nine == null) {
        break missingId;
      }

      id = R.id.one;
      Button one = ViewBindings.findChildViewById(rootView, id);
      if (one == null) {
        break missingId;
      }

      id = R.id.seven;
      Button seven = ViewBindings.findChildViewById(rootView, id);
      if (seven == null) {
        break missingId;
      }

      id = R.id.six;
      Button six = ViewBindings.findChildViewById(rootView, id);
      if (six == null) {
        break missingId;
      }

      id = R.id.three;
      Button three = ViewBindings.findChildViewById(rootView, id);
      if (three == null) {
        break missingId;
      }

      id = R.id.two;
      Button two = ViewBindings.findChildViewById(rootView, id);
      if (two == null) {
        break missingId;
      }

      id = R.id.zero;
      Button zero = ViewBindings.findChildViewById(rootView, id);
      if (zero == null) {
        break missingId;
      }

      return new CallKeyboardBinding((LinearLayout) rootView, asterisk, eight, five, four,
          gridlayout, mark, nine, one, seven, six, three, two, zero);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
