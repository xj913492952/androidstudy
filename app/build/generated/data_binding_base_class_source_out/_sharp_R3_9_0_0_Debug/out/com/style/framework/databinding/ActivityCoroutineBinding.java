// Generated by view binder compiler. Do not edit!
package com.style.framework.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.style.framework.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCoroutineBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnSearchMobile;

  @NonNull
  public final Button btnSearchWeather;

  @NonNull
  public final AutoCompleteTextView etCityCode;

  @NonNull
  public final AutoCompleteTextView etPhone;

  @NonNull
  public final TextView tvResult;

  @NonNull
  public final TextView viewGetContact;

  private ActivityCoroutineBinding(@NonNull LinearLayout rootView, @NonNull Button btnSearchMobile,
      @NonNull Button btnSearchWeather, @NonNull AutoCompleteTextView etCityCode,
      @NonNull AutoCompleteTextView etPhone, @NonNull TextView tvResult,
      @NonNull TextView viewGetContact) {
    this.rootView = rootView;
    this.btnSearchMobile = btnSearchMobile;
    this.btnSearchWeather = btnSearchWeather;
    this.etCityCode = etCityCode;
    this.etPhone = etPhone;
    this.tvResult = tvResult;
    this.viewGetContact = viewGetContact;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCoroutineBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCoroutineBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_coroutine, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCoroutineBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_search_mobile;
      Button btnSearchMobile = ViewBindings.findChildViewById(rootView, id);
      if (btnSearchMobile == null) {
        break missingId;
      }

      id = R.id.btn_search_weather;
      Button btnSearchWeather = ViewBindings.findChildViewById(rootView, id);
      if (btnSearchWeather == null) {
        break missingId;
      }

      id = R.id.et_city_code;
      AutoCompleteTextView etCityCode = ViewBindings.findChildViewById(rootView, id);
      if (etCityCode == null) {
        break missingId;
      }

      id = R.id.et_phone;
      AutoCompleteTextView etPhone = ViewBindings.findChildViewById(rootView, id);
      if (etPhone == null) {
        break missingId;
      }

      id = R.id.tv_result;
      TextView tvResult = ViewBindings.findChildViewById(rootView, id);
      if (tvResult == null) {
        break missingId;
      }

      id = R.id.view_get_contact;
      TextView viewGetContact = ViewBindings.findChildViewById(rootView, id);
      if (viewGetContact == null) {
        break missingId;
      }

      return new ActivityCoroutineBinding((LinearLayout) rootView, btnSearchMobile,
          btnSearchWeather, etCityCode, etPhone, tvResult, viewGetContact);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
