// Generated by view binder compiler. Do not edit!
package com.style.framework.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.style.framework.R;
import com.style.view.other.CustomTagsLayout;
import com.style.view.other.RecordAudioView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRecordAudioViewBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button btnStartRecord;

  @NonNull
  public final Button btnUpdateTags;

  @NonNull
  public final RecordAudioView recordAudioView;

  @NonNull
  public final CustomTagsLayout tagsContainer;

  private ActivityRecordAudioViewBinding(@NonNull RelativeLayout rootView,
      @NonNull Button btnStartRecord, @NonNull Button btnUpdateTags,
      @NonNull RecordAudioView recordAudioView, @NonNull CustomTagsLayout tagsContainer) {
    this.rootView = rootView;
    this.btnStartRecord = btnStartRecord;
    this.btnUpdateTags = btnUpdateTags;
    this.recordAudioView = recordAudioView;
    this.tagsContainer = tagsContainer;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRecordAudioViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRecordAudioViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_record_audio_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRecordAudioViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_start_record;
      Button btnStartRecord = ViewBindings.findChildViewById(rootView, id);
      if (btnStartRecord == null) {
        break missingId;
      }

      id = R.id.btn_update_tags;
      Button btnUpdateTags = ViewBindings.findChildViewById(rootView, id);
      if (btnUpdateTags == null) {
        break missingId;
      }

      id = R.id.record_audio_view;
      RecordAudioView recordAudioView = ViewBindings.findChildViewById(rootView, id);
      if (recordAudioView == null) {
        break missingId;
      }

      id = R.id.tags_container;
      CustomTagsLayout tagsContainer = ViewBindings.findChildViewById(rootView, id);
      if (tagsContainer == null) {
        break missingId;
      }

      return new ActivityRecordAudioViewBinding((RelativeLayout) rootView, btnStartRecord,
          btnUpdateTags, recordAudioView, tagsContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
