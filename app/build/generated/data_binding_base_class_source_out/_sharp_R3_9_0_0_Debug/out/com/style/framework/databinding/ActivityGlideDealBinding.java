// Generated by view binder compiler. Do not edit!
package com.style.framework.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.flexbox.FlexboxLayout;
import com.style.framework.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGlideDealBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnAvatar;

  @NonNull
  public final Button btnCatchColor;

  @NonNull
  public final Button btnCircle;

  @NonNull
  public final Button btnCircleBorder;

  @NonNull
  public final Button btnImageSize;

  @NonNull
  public final Button btnRectStroke;

  @NonNull
  public final Button btnRectTop;

  @NonNull
  public final Button btnRound;

  @NonNull
  public final FlexboxLayout fblBrand;

  @NonNull
  public final ImageView iv1;

  @NonNull
  public final ImageView iv2;

  @NonNull
  public final ImageView iv3;

  @NonNull
  public final ImageView ivAvatar;

  private ActivityGlideDealBinding(@NonNull LinearLayout rootView, @NonNull Button btnAvatar,
      @NonNull Button btnCatchColor, @NonNull Button btnCircle, @NonNull Button btnCircleBorder,
      @NonNull Button btnImageSize, @NonNull Button btnRectStroke, @NonNull Button btnRectTop,
      @NonNull Button btnRound, @NonNull FlexboxLayout fblBrand, @NonNull ImageView iv1,
      @NonNull ImageView iv2, @NonNull ImageView iv3, @NonNull ImageView ivAvatar) {
    this.rootView = rootView;
    this.btnAvatar = btnAvatar;
    this.btnCatchColor = btnCatchColor;
    this.btnCircle = btnCircle;
    this.btnCircleBorder = btnCircleBorder;
    this.btnImageSize = btnImageSize;
    this.btnRectStroke = btnRectStroke;
    this.btnRectTop = btnRectTop;
    this.btnRound = btnRound;
    this.fblBrand = fblBrand;
    this.iv1 = iv1;
    this.iv2 = iv2;
    this.iv3 = iv3;
    this.ivAvatar = ivAvatar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGlideDealBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGlideDealBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_glide_deal, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGlideDealBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_avatar;
      Button btnAvatar = ViewBindings.findChildViewById(rootView, id);
      if (btnAvatar == null) {
        break missingId;
      }

      id = R.id.btn_catch_color;
      Button btnCatchColor = ViewBindings.findChildViewById(rootView, id);
      if (btnCatchColor == null) {
        break missingId;
      }

      id = R.id.btn_circle;
      Button btnCircle = ViewBindings.findChildViewById(rootView, id);
      if (btnCircle == null) {
        break missingId;
      }

      id = R.id.btn_circle_border;
      Button btnCircleBorder = ViewBindings.findChildViewById(rootView, id);
      if (btnCircleBorder == null) {
        break missingId;
      }

      id = R.id.btn_image_size;
      Button btnImageSize = ViewBindings.findChildViewById(rootView, id);
      if (btnImageSize == null) {
        break missingId;
      }

      id = R.id.btn_rect_stroke;
      Button btnRectStroke = ViewBindings.findChildViewById(rootView, id);
      if (btnRectStroke == null) {
        break missingId;
      }

      id = R.id.btn_rect_top;
      Button btnRectTop = ViewBindings.findChildViewById(rootView, id);
      if (btnRectTop == null) {
        break missingId;
      }

      id = R.id.btn_round;
      Button btnRound = ViewBindings.findChildViewById(rootView, id);
      if (btnRound == null) {
        break missingId;
      }

      id = R.id.fbl_brand;
      FlexboxLayout fblBrand = ViewBindings.findChildViewById(rootView, id);
      if (fblBrand == null) {
        break missingId;
      }

      id = R.id.iv_1;
      ImageView iv1 = ViewBindings.findChildViewById(rootView, id);
      if (iv1 == null) {
        break missingId;
      }

      id = R.id.iv_2;
      ImageView iv2 = ViewBindings.findChildViewById(rootView, id);
      if (iv2 == null) {
        break missingId;
      }

      id = R.id.iv_3;
      ImageView iv3 = ViewBindings.findChildViewById(rootView, id);
      if (iv3 == null) {
        break missingId;
      }

      id = R.id.iv_avatar;
      ImageView ivAvatar = ViewBindings.findChildViewById(rootView, id);
      if (ivAvatar == null) {
        break missingId;
      }

      return new ActivityGlideDealBinding((LinearLayout) rootView, btnAvatar, btnCatchColor,
          btnCircle, btnCircleBorder, btnImageSize, btnRectStroke, btnRectTop, btnRound, fblBrand,
          iv1, iv2, iv3, ivAvatar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
