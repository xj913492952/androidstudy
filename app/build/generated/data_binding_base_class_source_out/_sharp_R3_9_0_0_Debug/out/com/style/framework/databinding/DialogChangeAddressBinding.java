// Generated by view binder compiler. Do not edit!
package com.style.framework.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.style.framework.R;
import com.style.view.wheel.views.WheelView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogChangeAddressBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView btnCancel;

  @NonNull
  public final TextView btnOk;

  @NonNull
  public final LinearLayout lyMyinfoChangeaddress;

  @NonNull
  public final TextView tvShareTitle;

  @NonNull
  public final WheelView wvAddressCity;

  @NonNull
  public final WheelView wvAddressProvince;

  private DialogChangeAddressBinding(@NonNull LinearLayout rootView, @NonNull TextView btnCancel,
      @NonNull TextView btnOk, @NonNull LinearLayout lyMyinfoChangeaddress,
      @NonNull TextView tvShareTitle, @NonNull WheelView wvAddressCity,
      @NonNull WheelView wvAddressProvince) {
    this.rootView = rootView;
    this.btnCancel = btnCancel;
    this.btnOk = btnOk;
    this.lyMyinfoChangeaddress = lyMyinfoChangeaddress;
    this.tvShareTitle = tvShareTitle;
    this.wvAddressCity = wvAddressCity;
    this.wvAddressProvince = wvAddressProvince;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogChangeAddressBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogChangeAddressBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_change_address, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogChangeAddressBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_cancel;
      TextView btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.btn_ok;
      TextView btnOk = ViewBindings.findChildViewById(rootView, id);
      if (btnOk == null) {
        break missingId;
      }

      LinearLayout lyMyinfoChangeaddress = (LinearLayout) rootView;

      id = R.id.tv_share_title;
      TextView tvShareTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvShareTitle == null) {
        break missingId;
      }

      id = R.id.wv_address_city;
      WheelView wvAddressCity = ViewBindings.findChildViewById(rootView, id);
      if (wvAddressCity == null) {
        break missingId;
      }

      id = R.id.wv_address_province;
      WheelView wvAddressProvince = ViewBindings.findChildViewById(rootView, id);
      if (wvAddressProvince == null) {
        break missingId;
      }

      return new DialogChangeAddressBinding((LinearLayout) rootView, btnCancel, btnOk,
          lyMyinfoChangeaddress, tvShareTitle, wvAddressCity, wvAddressProvince);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
